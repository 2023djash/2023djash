# 配置名称: Clash 配置
# 配置作者: djash
# 更新时间: 24-06-23 05:00


# 混合端口 HTTP和SOCKS5用一个端口
mixed-port: 7893
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true
# 允许局域网的连接（可用来共享代理）
allow-lan: true
# 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录  
ipv6: false
# 规则模式：rule/global/direct/script
mode: rule
# 设置日志输出级别: silent/error/warning/info/debug
log-level: info
# 全局 TLS 指纹
global-client-fingerprint: chrome
# 匹配所有进程（always/strict/off）
find-process-mode: strict

# 使用geoip.dat数据库
geodata-mode: true
geox-url:
  geoip: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"

profile:
  # 存储 select 选择记录
  store-selected: true 
  # 持久化 fake-ip
  store-fake-ip: true  

# 嗅探域名 可选配置
sniffer:               
  enable: true
  # 是否使用嗅探结果作为实际访问，默认 true
  parse-pure-ip: true  
  sniff:
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    QUIC:
      ports: [443, 8443]

# Tun 配置  
tun:
  enable: true
  # 可选： system/gvisor/mixed；
  stack: mixed
  # dns劫持,一般设置为 any:53 即可, 即劫持所有53端口的udp流量
  dns-hijack: [any:53]
  # 自动设置全局路由，可以自动将全局流量路由进入tun网卡。
  auto-route: true
  # 自动识别出口网卡
  auto-detect-interface: true

dns:
  enable: true
  # IPV6解析开关；如果为false，将返回ipv6结果为空
  ipv6: false
  # 模式：redir-host或fake-ip
  enhanced-mode: fake-ip
  # DNS监听地址
  listen: :1053
  # Fake-IP解析地址池
  fake-ip-range: 198.18.0.1/16
  # fakeip 过滤，以下地址不会下发 fakeip 映射用于连接
  fake-ip-filter: ['*.lan','*.direct', cable.auth.com, '*.msftconnecttest.com', '*.msftncsi.com', network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, '*.srv.nintendo.net', '*.stun.playstation.net', xbox.*.microsoft.com, '*.xboxlive.com', stun.*, global.turn.twilio.com, global.stun.twilio.com, app.yinxiang.com, injections.adguard.org, local.adguard.org, cable.auth.com, localhost.*.qq.com, localhost.*.weixin.qq.com, '*.logon.battlenet.com.cn', '*.logon.battle.net', '*.blzstatic.cn', music.163.com, '*.music.163.com', '*.126.net', musicapi.taihe.com, music.taihe.com, songsearch.kugou.com, trackercdn.kugou.com, '*.kuwo.cn', api-jooxtt.sanook.com, api.joox.com, joox.com, y.qq.com, '*.y.qq.com', streamoc.music.tc.qq.com, mobileoc.music.tc.qq.com, isure.stream.qqmusic.qq.com, dl.stream.qqmusic.qq.com, aqqmusic.tc.qq.com, amobile.music.tc.qq.com, '*.xiami.com', '*.music.migu.cn', music.migu.cn, proxy.golang.org, '*.mcdn.bilivideo.cn', '*.cmpassport.com', id6.me, open.e.189.cn, mdn.open.wo.cn, opencloud.wostore.cn, auth.wosms.cn, '*.jegotrip.com.cn', '*.icitymobile.mobi', '*.pingan.com.cn', '*.cmbchina.com', '*.10099.com.cn', pool.ntp.org, '*.pool.ntp.org', ntp.*.com, time.*.com, 'ntp?.*.com', 'time?.*.com', time.*.gov, time.*.edu.cn, '*.ntp.org.cn', PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*]
  #默认的域名解析服务器
  nameserver: [quic://223.5.5.5, quic://223.6.6.6, https://1.12.12.12/dns-query, https://120.53.53.53/dns-query]                     


# 代理
proxies: null

# 代理订阅
proxy-providers:
  𝐃𝐣𝐚𝐬𝐡:
    type: http
    url: "订阅链接" 
    interval: 3600
    path: ./Server/djash.yaml
    health-check:
      enable: true
      url: https://cp.cloudflare.com/generate_204
      interval: 600


# 代理策略组
proxy-groups:
  - name: "𝐏𝐫𝐨𝐱𝐲"
    type: select
    use:
      - 𝐃𝐣𝐚𝐬𝐡
  
  - name: "𝐒𝐩𝐨𝐭𝐢𝐟𝐲"
    type: select
    proxies: 
      - 𝐇𝐨𝐧𝐠𝐊𝐨𝐧𝐠
      - 𝐓𝐚𝐢𝐖𝐚𝐧
      - 𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞

  - name: "𝐓𝐢𝐤𝐓𝐨𝐤"
    type: select
    proxies:
      - 𝐇𝐨𝐧𝐠𝐊𝐨𝐧𝐠
      - 𝐓𝐚𝐢𝐖𝐚𝐧
      - 𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞
      - 𝐉𝐚𝐩𝐚𝐧
      - 𝐔𝐒𝐀

  - name: "𝐎𝐩𝐞𝐧𝐀𝐢"
    type: select
    proxies:
      - 𝐓𝐚𝐢𝐖𝐚𝐧
      - 𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞
      - 𝐉𝐚𝐩𝐚𝐧
      - 𝐔𝐒𝐀

  - name: "𝐌𝐢𝐜𝐫𝐨𝐬𝐨𝐟𝐭"
    type: select
    proxies:
      - 𝐇𝐨𝐧𝐠𝐊𝐨𝐧𝐠
      - 𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞
      - 𝐔𝐒𝐀
      - DIRECT

  - name: "𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦"
    type: select
    proxies:
      - 𝐇𝐨𝐧𝐠𝐊𝐨𝐧𝐠
      - 𝐓𝐚𝐢𝐖𝐚𝐧
      - 𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞
      - 𝐉𝐚𝐩𝐚𝐧
      - 𝐔𝐒𝐀

  - name: "𝐈𝐧𝐬𝐭𝐚𝐠𝐫𝐚𝐦"
    type: select
    proxies:
      - 𝐇𝐨𝐧𝐠𝐊𝐨𝐧𝐠
      - 𝐓𝐚𝐢𝐖𝐚𝐧
      - 𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞
      - 𝐉𝐚𝐩𝐚𝐧
      - 𝐔𝐒𝐀

  - name: "𝐆𝐨𝐨𝐠𝐥𝐞"
    type: select
    proxies:
      - 𝐇𝐨𝐧𝐠𝐊𝐨𝐧𝐠
      - 𝐓𝐚𝐢𝐖𝐚𝐧
      - 𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞
      - 𝐉𝐚𝐩𝐚𝐧
      - 𝐔𝐒𝐀

  - name: "𝐆𝐉𝐦𝐞𝐝𝐢𝐚"
    type: select
    proxies:
      - 𝐇𝐨𝐧𝐠𝐊𝐨𝐧𝐠
      - 𝐓𝐚𝐢𝐖𝐚𝐧
      - 𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞
      - 𝐉𝐚𝐩𝐚𝐧
      - 𝐔𝐒𝐀

  - name: "𝐆𝐥𝐨𝐛𝐚𝐥"
    type: select
    proxies:
      - 𝐇𝐨𝐧𝐠𝐊𝐨𝐧𝐠
      - 𝐓𝐚𝐢𝐖𝐚𝐧
      - 𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞
      - 𝐉𝐚𝐩𝐚𝐧
      - 𝐔𝐒𝐀

  - name: "𝐃𝐨𝐮𝐃𝐢"
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      - 𝐇𝐨𝐧𝐠𝐊𝐨𝐧𝐠
      - 𝐓𝐚𝐢𝐖𝐚𝐧
      - 𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞
      - 𝐉𝐚𝐩𝐚𝐧
      - 𝐔𝐒𝐀
      - 𝐊𝐨𝐫𝐞𝐚
      - DIRECT

  - name: "𝐇𝐨𝐧𝐠𝐊𝐨𝐧𝐠"
    type: select
    filter: "香港|港|HK|🇭🇰|(?i)Hong"
    use:
      - 𝐃𝐣𝐚𝐬𝐡

  - name: "𝐓𝐚𝐢𝐖𝐚𝐧"
    type: select
    filter: "台湾|台|TW|🇹🇼|(?i)Taiwan"
    use:
      - 𝐃𝐣𝐚𝐬𝐡

  - name: "𝐉𝐚𝐩𝐚𝐧"
    type: select
    filter: "日本|日|JP|🇯🇵|(?i)Japan"
    use:
      - 𝐃𝐣𝐚𝐬𝐡

  - name: "𝐊𝐨𝐫𝐞𝐚"
    type: select
    filter: "韩国|韩|KR|🇰🇷|(?i)Korea"
    use:
      - 𝐃𝐣𝐚𝐬𝐡

  - name: "𝐒𝐢𝐧𝐠𝐚𝐩𝐨𝐫𝐞"
    type: select
    filter: "新加坡|狮|SG|🇸🇬|(?i)Singapore"
    use:
      - 𝐃𝐣𝐚𝐬𝐡

  - name: "𝐔𝐒𝐀"
    type: url-test
    filter: "美国|美|US|🇺🇸|(?i)States"
    use:
      - 𝐃𝐣𝐚𝐬𝐡

# 本地规则
rules:
  - RULE-SET, 𝐆𝐮𝐢𝐳𝐞𝐗𝐙, DIRECT
  - RULE-SET, 𝐀𝐝𝐬𝐋𝐨𝐜𝐤, REJECT
  - RULE-SET, 𝐝𝐨𝐮𝐲𝐢𝐧,𝐏𝐫𝐨𝐱𝐲
  - RULE-SET, 𝐒𝐩𝐨𝐭𝐢𝐟𝐲,𝐒𝐩𝐨𝐭𝐢𝐟𝐲
  - RULE-SET, 𝐓𝐢𝐤𝐭𝐨𝐤,𝐓𝐢𝐤𝐓𝐨𝐤
  - RULE-SET, 𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦,𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦
  - RULE-SET, 𝐈𝐧𝐬𝐭𝐚𝐠𝐫𝐚𝐦,𝐈𝐧𝐬𝐭𝐚𝐠𝐫𝐚𝐦
  - RULE-SET, 𝐆𝐢𝐭𝐡𝐮𝐛,𝐆𝐨𝐨𝐠𝐥𝐞
  - RULE-SET, 𝐘𝐨𝐮𝐭𝐮𝐛𝐞,𝐆𝐨𝐨𝐠𝐥𝐞
  - RULE-SET, 𝐆𝐨𝐨𝐠𝐥𝐞,𝐆𝐨𝐨𝐠𝐥𝐞
  - RULE-SET, 𝐎𝐩𝐞𝐧𝐀𝐢,𝐎𝐩𝐞𝐧𝐀𝐢
  - RULE-SET, 𝐌𝐢𝐜𝐫𝐨𝐬𝐨𝐟𝐭,𝐌𝐢𝐜𝐫𝐨𝐬𝐨𝐟𝐭
  - RULE-SET, 𝐆𝐉𝐦𝐞𝐝𝐢𝐚,𝐆𝐉𝐦𝐞𝐝𝐢𝐚
  - RULE-SET, 𝐆𝐉𝐧𝐞𝐭,𝐆𝐥𝐨𝐛𝐚𝐥
  - RULE-SET, 𝐋𝐀𝐍, DIRECT
  - RULE-SET, 𝐀𝐒𝐍, DIRECT
  - MATCH, 𝐃𝐨𝐮𝐃𝐢

# 远程规则
rule-providers:
  𝐆𝐮𝐢𝐳𝐞𝐗𝐙: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/Unbreak.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/Unbreak.yaml

  𝐀𝐝𝐬𝐋𝐨𝐜𝐤: 
    behavior: domain
    interval: 86400
    type: http
    path: ./Rules/AdBlock.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/AdBlock.yaml

  𝐝𝐨𝐮𝐲𝐢𝐧: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/Douyin.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/Douyin.yaml

  𝐒𝐩𝐨𝐭𝐢𝐟𝐲: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/Spotify.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/Spotify.yaml

  𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/Telegram.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/Telegram.yaml

  𝐓𝐢𝐤𝐭𝐨𝐤: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/TikTok.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/TikTok.yaml

  𝐈𝐧𝐬𝐭𝐚𝐠𝐫𝐚𝐦: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/Instagram.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/Instagram.yaml

  𝐆𝐢𝐭𝐡𝐮𝐛: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/Github.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/Github.yaml

  𝐘𝐨𝐮𝐭𝐮𝐛𝐞: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/YouTube.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/YouTube.yaml

  𝐆𝐨𝐨𝐠𝐥𝐞: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/Google.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/Google.yaml

  𝐎𝐩𝐞𝐧𝐀𝐢: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/Openai.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/Openai.yaml

  𝐌𝐢𝐜𝐫𝐨𝐬𝐨𝐟𝐭: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/Microsoft.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/Microsoft.yaml

  𝐆𝐉𝐦𝐞𝐝𝐢𝐚: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/GlobalMedia.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/GlobalMedia.yaml

  𝐆𝐉𝐧𝐞𝐭: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/Global.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/Global.yaml

  𝐋𝐀𝐍: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/LAN.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/LAN.yaml

  𝐀𝐒𝐍: 
    behavior: classical
    interval: 86400
    type: http
    path: ./Rules/GeoipCN.yaml
    url: https://raw.githubusercontent.com/2023djash/2023djash/main/Clash/Rules/GeoipCN.yaml